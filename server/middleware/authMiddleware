const jwt = require("jsonwebtoken");


const protect = (roles = []) => 
{
    if (typeof roles === "string") 
    {
        roles = [roles];
    }

    return (req, res, next) => 
    {
        try 
        {
            const authHeader = req.headers.authorization;

            if (!authHeader || !authHeader.startsWith("Bearer ")) 
            {
                return res.status(401).json({ message: "No token, authorization denied" });
            }

        const token = authHeader.split(" ")[1];
        const decoded = jwt.verify(token, process.env.JWT_SECRET);

        req.user = decoded; 

        if (roles.length && !roles.includes(req.user.role)) 
        {
            return res.status(403).json({ message: "Access forbidden: insufficient rights" });
        }

        next();
    } 
    catch (error) 
    {
        return res.status(401).json({ message: "Token is not valid or expired" });
    }
    };
};

module.exports = protect;
